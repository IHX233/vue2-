{"version":3,"file":"vue.js","sources":["../../src/util.js","../../src/observe/array.js","../../src/observe/dep.js","../../src/observe/index.js","../../src/observe/watcher.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/global-api/index.js","../../src/index.js"],"sourcesContent":["export function proxy(vm,data,key){\n    Object.defineProperty(vm,key,{\n        get(){\n            return vm[data][key]\n        },\n        set(newValue){\n            vm[data][key] = newValue\n        }\n    }) \n}\nexport function defineProperty(target,key,value){\n    Object.defineProperty(target,key,{\n        enumerable:false, //不能被枚举\n        configurable:false,\n        value\n    })\n}\nexport const LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed '\n]\nconst strats = []\nstrats.data = function(parentVal,childValue){\n    return childValue\n}\n// strats.computed = function(){\n    \n// }\n// strats.watch = function(){\n    \n// }\nfunction mergeHook(parentVal,childValue){\n    if(childValue){\n        if(parentVal){\n            return parentVal.concat(childValue)//父亲和儿子拼接\n        }else{\n            return [childValue] //儿子转换为数组\n        }\n    }else{\n        return parentVal //不合并，用父亲的\n    }\n}\nLIFECYCLE_HOOKS.forEach(hook=>{\n    strats[hook] = mergeHook\n})   \n \nexport function mergeOptions(parent,child){\n    const options = {}\n    //遍历父亲\n    for(let key in parent){//父亲和儿子都有的在这处理\n        mergeField(key)\n    }\n    //儿子有父亲没有的在这处理\n    for(let key in child){//将儿子多的赋予到父亲上\n        if(!parent.hasOwnProperty(key)){\n            mergeField(key)\n        }\n\n    }\n    function mergeField(key){//合并字段\n        if(strats[key]){\n            options[key] = strats[key](parent[key],child[key])\n        }else{\n            options[key] = child[key]\n        }\n        \n    }\n    return options\n}\nlet callbacks = []\nlet pending = false\nfunction flushCallbacks(){\n    while(callbacks.length){\n        let cb = callbacks.pop()\n        cb()\n    }\n    callbacks.forEach(cb=>cb())\n    callbacks = []\n    pending = false\n}\nlet timerFunc\n//兼容处理\nif(Promise){\n    timerFunc = () => {\n        Promise.resolve().then(flushCallbacks)\n    }\n}else if(MutationObserver){//可以监控dom变化，监控完毕异步更新\n    let observe = new MutationObserver(flushCallbacks)\n    let textNode = document.createTextNode(1)\n    observe.observe(textNode,{characterData:true})\n    timerFunc = ()=>{\n        textNode.textContent = 2\n    }\n}else if(setImmediate){\n    timerFunc = ()=>{\n        setImmediate(flushCallbacks)\n    }\n}else{\n    timerFunc = ()=>{\n        setTimeout(flushCallbacks)\n    }\n}\nexport function nextTick(cb){\n    callbacks.push(cb)\n    if(!pending){ \n        timerFunc()//这个是异步方法，做了兼容处理\n        pending = true\n    }\n    \n}","let oldArrayProtoMethods = Array.prototype\nexport let arrayMethods = Object.create(oldArrayProtoMethods)\nlet methods = ['push','pop','shift','shift','reverse','sort','splice']\nmethods.forEach(method => {\n    arrayMethods[method] = function(...args){\n        //当调用数组劫持的七个方法时触发更新\n        const result = oldArrayProtoMethods[method].apply(this,args)\n        let inserted;\n        let ob = this._ob_\n        switch(method){\n            case 'push':\n            case 'unshift'://两个都是增加，内容 可能是对象，需要劫持\n                inserted = args\n                break;\n            case 'splice'://$set原理\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n        if(inserted){\n            ob.observeArray(inserted)\n        }\n        ob.dep.notify()//通知数组更新\n        return result\n    }\n})","let id = 0\nclass Dep{\n    constructor(){\n        this.subs = []\n        this.id = id++\n    }\n    depend(){\n        //dep存放watch，watch也存放dep\n        Dep.target.addDep(this)\n    }\n    addSub(watcher){\n        this.subs.push(watcher)\n    }\n    notify(){\n        this.subs.forEach(watcher=>watcher.update())\n    }\n}\nDep.target = null\nexport function pushTarget(watcher){\n    Dep.target = watcher\n}\nexport function popTarget(){\n    Dep.target = null\n}\nexport default Dep\n//多对多的关系，一个属性有一个dep来收集watcher\n//dep可以存多个watch\n//一个watch可以对应多个dep","import { defineProperty } from \"../util\"\nimport { arrayMethods } from \"./array\"\nimport Dep from \"./dep\"\nclass Observe{\n    constructor(value){\n        this.dep = new Dep()//为了把dep放ob属性上，这样数组方法触发时才能用到dep的更新方法\n        //判断一个属性是否是被观测过，看它有没有_ob_属性\n        defineProperty(value,'_ob_',this)\n        if(Array.isArray(value)){\n            value.__proto__ = arrayMethods\n            this.observeArray(value)//数组中普通类型是不做观测的\n        }else{\n            this.walk(value)\n        }\n        \n    }\n    observeArray(value){\n        value.forEach(item=>{\n            observe(item)\n        })\n    }\n    walk(data){\n        let keys = Object.keys(data)\n        keys.forEach(key=>{\n            defineReactive(data,key,data[key])\n        })\n    }\n}\nfunction defineReactive(data,key,value){\n    //或取数组对应的dep\n    let childDep = observe(value);//如果值为对象，继续监控\n    let dep = new Dep()\n    Object.defineProperty(data,key,{\n        get(){//依赖收集\n            if(Dep.target){//让这个属性记住这个watcher\n                dep.depend()\n                if(typeof childDep == \"object\"){//可能是数组，也可能是对象\n                    childDep.dep.depend()//这样才能收集数组的watch并在调用数组方法时触发更新\n                }\n            }\n            return value\n        },\n        set(newValue){//依赖更新\n            if(value === newValue) return\n            observe(newValue) //如果新值设置为对象，继续监控\n            value = newValue\n            dep.notify()\n        }\n    })\n}\nexport function observe(data){\n    if(typeof data !== \"object\" || data == null){\n        return\n    }\n    if(data._ob_){\n        return data\n    }\n    return new Observe(data)\n}","import {pushTarget,popTarget} from './dep'\nimport {nextTick} from \"../util\"\nlet id = 0\nclass Watcher{\n    constructor(vm,exprOrFn,cb,options={}){\n        this.vm = vm\n        this.exprOrFn = exprOrFn\n        this.cb = cb\n        this.options = options\n        this.user = options.user//用户watcher标识\n        this.isWatcher = typeof options === \"boolean\"//是渲染watch\n        this.id = id++ //watcher的唯一标识\n        this.deps = [] //watcher记录有多少dep依赖它\n        this.depsid = new Set()\n        if(typeof exprOrFn == \"function\"){\n            this.getter = exprOrFn\n        }else{\n            this.getter = function(){\n                let path = exprOrFn.split('.')\n                let obj = vm\n                for(let i=0;i<path.length;i++){\n                    obj = obj[path[i]]\n                }\n                return obj \n            }\n        }\n        this.value = this.get()\n    }\n    addDep(dep){\n        let id = dep.id\n        if(!this.depsid.has(id)){\n            this.deps.push(dep)\n            this.depsid.add(id)\n            dep.addSub(this)\n        }\n    }\n    get(){\n        pushTarget(this)//当前watcher实例\n        let result = this.getter()\n        popTarget()\n        return result\n    }\n    run(){\n        //用户watcher时取新老值\n        let newValue = this.get()\n        let oldValue = this.value\n        this.value = newValue\n        if(this.user){\n            this.cb.call(this.vm,newValue,oldValue)\n        }\n    }\n    update(){\n        // this.get()//重新渲染\n        queueWatcher(this)\n    }\n}\nlet queue = []//将需要批处理更新的watcher存到一个队列中，稍后让watcher执行\nlet has = {}\nlet pending = false\nfunction flushSchedulerQueue(){\n    queue.forEach(watcher => {watcher.run();\n        if(watcher.isWatcher){\n            watcher.cb()\n        }\n        \n    })\n    queue = []\n    has = {}\n    pending = false\n}\nfunction queueWatcher(watcher){\n    const id = watcher.id\n    if(has[id] == null){\n        queue.push(watcher)\n        has[id] = true\n        if(!pending){\n            nextTick(flushSchedulerQueue)\n            pending = true\n        }\n    }\n}\nexport default Watcher","import { observe } from \"./observe/index.js\"\nimport Watcher from \"./observe/watcher.js\"\nimport {proxy,nextTick} from \"./util.js\"\n\nexport function initState(vm){\n    const opt = vm.$options\n    if(opt.props){\n        initProps(vm)\n    }\n    if(opt.data){\n        initData(vm)\n    }\n    if(opt.methods){\n        initMethods(vm)\n    }\n    if(opt.computed){\n        initComputed(vm)\n    }\n    if(opt.watch){\n        initWatch(vm)\n    }\n}\nfunction initProps(){\n    \n}\n\nfunction initData(vm){\n    let data = vm.$options.data\n    vm._data = data = typeof data == 'function'?data.call(vm):data\n    for(let key in data){\n        proxy(vm,'_data',key)\n    }\n    observe(data)//让对象重新定义set、get方法\n}\nfunction initMethods(){\n\n}\nfunction initComputed(){\n\n}\nfunction initWatch(vm){\n    let watch = vm.$options.watch\n    for(let key in watch){\n        const handler = watch[key]\n        if(Array.isArray(handler)){//数组\n            handler.forEach(handle=>{\n                createWatcher(vm,key,handle)\n            })\n        }else{//字符串、对象、函数\n            createWatcher(vm,key,handler)\n        }\n    }\n    \n}\nfunction createWatcher(vm,exprOrFn,handler,options={}){//options可以用来标识是用户watcher\n    if(typeof handler == \"object\"){\n        options = handler\n        handler = handler.handler\n    }\n    if(typeof handler == \"string\"){\n        handler = vm[handler]\n    }\n    return vm.$watch(exprOrFn,handler,options)\n}\nexport function stateMixin(Vue){\n    Vue.prototype.$nextTick = function(cb){\n        nextTick(cb)\n    }\n    Vue.prototype.$watch = function(exprOrFn,cb,options){\n        let watcher =  new Watcher(this,exprOrFn,cb,{...options,user:true})\n        if(options.immediate){\n            cb()\n        }\n    }\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //标签开头的正则，捕获的是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //匹配标签结尾\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/ //匹配属性\nconst startTagClose = /^\\s*(\\/?)>/  //匹配标签结束\n\nexport function parseHtml(html){\n    function creatASTElement(tagName,attrs){\n        return {\n            tag:tagName,\n            type:1,\n            children:[],\n            attrs,\n            parent:null\n        }\n    }\n    //被解析的根元素\n    let root\n    //当前在被解析的元素\n    let currentParent\n    //用于对比标签是否符合规范，即有开始标签也有结束标签\n    let stack = []\n    function start(tagName,attrs){\n        let element = creatASTElement(tagName,attrs)\n        if(!root){\n            root = element\n        }\n        currentParent = element\n        stack.push(element)//将生成的ast元素放到栈中\n    }\n    function end(){\n        let element = stack.pop();//取出栈里最后一个，即该标签解析结束\n        currentParent = stack[stack.length-1] //更新当前解析的标签\n        if(currentParent){//当一个标签解析完成，就可以知道其父标签  \n            element.parent = currentParent\n            currentParent.children.push(element)\n        }\n    \n    }\n    function chars(text){\n        \n        text = text.replace(/\\s/g,'')//去掉空格\n        if(text){\n            currentParent.children.push({\n                 type:3,\n                 text\n            })\n        }\n        \n    }\n    while(html){\n        let textEnd = html.indexOf('<')\n        if(textEnd == 0){//是标签的开始标记\n            const startTagMatch = parseStartTag()\n            if(startTagMatch){ \n                start(startTagMatch.tagName,startTagMatch.attrs )\n                continue\n            }\n            const endTagMatch = html.match(endTag)\n            if(endTagMatch){\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1])\n                continue\n            }\n        }\n        let text\n        if(textEnd>0){//是文本\n            text = html.substring(0,textEnd)\n        }\n        if(text){\n            advance(text.length)\n            chars(text)\n        }\n    }\n    return root \n    function advance(n){//截取更新html\n        html = html.substring(n)\n    }\n    function parseStartTag(){\n        const start = html.match(startTagOpen)\n        if(start){\n            const match = {\n                tagName:start[1],\n                attrs:[]\n            }\n            advance(start[0].length)//删除开始标签\n            //不是标签结束标记且有属性\n            let end;\n            let attr;\n            while(!(end=html.match(startTagClose))&&(attr=html.match(attribute))){\n                match.attrs.push({name:attr[1],value:attr[3]||attr[4]||attr[5]})\n                advance(attr[0].length) \n            }\n            if(end){//匹配到标签结束标记，删除标签并结束一轮的开始标签信息解析\n                advance(end[0].length)\n                return match;\n                \n            }\n        }\n    }\n}","const defaultTagRe = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g //匹配双大括号和里面的内容\nfunction genProps(attrs){\n    let str = ''\n    for(let i = 0;i<attrs.length;i++){\n        let attr = attrs[i]\n        if(attr.name === 'style'){//对样式的特殊处理\n            let obj = {};\n            attr.value.split(';').foreach(item => {\n                let [key,value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\nfunction gen(node){\n    if(node.type == 1){\n        return generate(node)//生成元素节点的字符串\n    }else{\n        let text = node.text;//获取文本\n        //_v('hello{{world}}') => _v('hello'+_s(world))\n        if(!defaultTagRe.test(text)){\n            //如果是普通文本，不带{{}}\n            return `_v(${JSON.stringify(text)})`\n        }\n        let tokens = []\n        let lastIndex = defaultTagRe.lastIndex = 0 //如果正则是全局模式，需要每次使用前设置为0\n        let match,index\n        while(match = defaultTagRe.exec(text)){\n            index = match.index//保存匹配到的索引\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`)\n            lastIndex = index + match[0].length\n        }\n        if(lastIndex<text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\n        }\n        return `_v(${tokens.join('+')})`\n    }\n}\nfunction genChildren(el){\n    const children = el.children\n    if(children){ //将转换后的儿子用逗号拼接起来\n        return children.map(child => gen(child)).join(',')\n    }\n}\nexport function generate(el){\n    let children = genChildren(el)//儿子的生成 \n    let code = `_c('${el.tag}',${\n        el.attrs?`${genProps(el.attrs)}`:'undefined'\n    }${\n        children?`,${children}`:''\n    })`\n    return code\n}","import {parseHtml} from './parse.js'\nimport { generate } from './generate.js'\nexport function compileToFunctions(template){\n    //1.将html转化为ast语法树\n    let ast = parseHtml(template)\n\n    //2.优化静态节点\n\n    //3.通过这棵树重新生成代码\n    let code = generate(ast)\n\n    //4.将字符串变成函数 限制取值范围 通过with进行取值 之后通过render函数就可以改变this 让这个函数内部取到结果\n    let render = new Function(`with(this){return ${code}}`)\n    return render\n}","export function patch(oldVnode,vnode){\n    // console.log(oldVnode,vnode)\n    //虚拟dom转换为真实dom\n    let el = createElm(vnode)//产生真实dom\n    let parentElm = oldVnode.parentNode\n    parentElm.insertBefore(el,oldVnode.nextSibling)//将新的节点插在老的节点前面\n    parentElm.removeChild(oldVnode)//删除老的节点\n    return el\n}\nfunction createElm(vnode){\n    let {tag,children,key,data,text} = vnode\n    if(typeof tag == \"string\"){\n        vnode.el = document.createElement(tag)\n        updateProperties(vnode)\n        children.forEach(child=>{\n            vnode.el.appendChild(createElm(child))\n        })\n    }else{\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\nfunction updateProperties(vnode){\n    let el = vnode.el\n    let newProps = vnode.data\n    for(let key in newProps){\n        if(key == \"style\"){\n            for(let styleName in newProps.style){\n                el.style[styleName] = newProps.style[styleName]\n            }\n        }else if(key == \"class\"){\n            el.className = el.class\n        }else{\n            el.setAttribute(key,newProps[key]) \n        }\n        \n    }\n    \n}","import {patch} from './vdom/patch'\nimport Watcher from './observe/watcher'\nexport function lifecycleMixin(Vue){\n    Vue.prototype._update = function(vnode){\n        const vm = this\n        //用新创建的元素，替换老的vm.$el\n        vm.$el = patch(vm.$el,vnode)\n    }\n}\nexport function mountComponent(vm,el){\n    callHook(vm,'beforeMount')\n    let updateComponent = () => {\n        vm._update(vm._render())\n    }\n    //初始化创建watcher\n    let watcher = new Watcher(vm,updateComponent,()=>{\n        callHook(vm,'updated')\n    },true)\n    watcher.get()\n    callHook(vm,'mounted')\n}\nexport function callHook(vm,hook){\n    const handlers = vm.$options[hook]\n    if(handlers){\n        for(let i = 0;i<handlers.length;i++){\n            handlers[i].call(vm)\n        }\n    }\n}","import {initState} from './state'\nimport { compileToFunctions } from './compiler/index.js'\nimport {callHook, mountComponent} from './lifecycle'\nimport {mergeOptions} from './util'\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){\n        const vm = this\n        vm.$options = mergeOptions(vm.constructor.options,options)\n        callHook(vm,'beforeCreate')\n        //初始化状态（将数据做一个初始化劫持，当改变数据时更新视图）\n        initState(vm)\n        callHook(vm,'created')\n        if(vm.$options.el){\n            vm.$mount(vm.$options.el)\n        }\n    }\n    Vue.prototype.$mount = function(el){\n        //挂载操作\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        vm.$el = el\n        if(!options.render){\n            //没有render，把template转换成render方法\n            let template = options.template\n            if(!template && el){\n                template = el.outerHTML\n            }\n            //将模编译成render函数\n            const render = compileToFunctions(template)\n            options.render = render\n        }\n        mountComponent(vm,el)\n    }\n}","export function renderMixin(Vue){\n    Vue.prototype._c = function(){//创建虚拟dom元素\n        return createElement(...arguments)\n    }\n    Vue.prototype._s = function(val){//stringify\n        return val == null ? '' : (typeof val == 'object') ? JSON.stringify(val) : val\n    }\n    Vue.prototype._v = function(text){//创建虚拟dom文本元素\n        return createTextVnode(text)\n    }\n    \n    Vue.prototype._render = function(){//_render = render\n        const vm = this\n        const render = vm.$options.render\n        let vnode = render.call(vm)\n        return vnode \n    }\n}\nfunction createElement(tag,data={},...children){\n    return vnode(tag,data,data.key,children)\n}\nfunction createTextVnode(text){\n    return vnode(undefined,undefined,undefined,undefined,text)\n}\nfunction vnode(tag,data,key,children,text){\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}","import {mergeOptions} from '../util'\nexport function initGlobalApi(Vue){\n    Vue.options = {};\n    Vue.mixin = function(mixin){\n        this.options = mergeOptions(this.options,mixin)\n    }\n    \n} ","import { initMixin } from \"./init\";\nimport { lifecycleMixin } from \"./lifecycle\";\nimport { renderMixin } from \"./vdom/index\";\nimport {initGlobalApi} from \"./global-api/index\"\nimport {stateMixin} from \"./state\"\nexport default function Vue(options){\n    this._init(options)\n}\n//对原型进行拓展 原型方法\ninitMixin(Vue) //init方法\nlifecycleMixin(Vue) //_update\nrenderMixin(Vue) //_render\nstateMixin(Vue)\n\n//静态方法\ninitGlobalApi(Vue)"],"names":["proxy","vm","data","key","Object","defineProperty","get","set","newValue","target","value","enumerable","configurable","LIFECYCLE_HOOKS","strats","parentVal","childValue","mergeHook","concat","forEach","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","callbacks","pending","flushCallbacks","length","cb","pop","timerFunc","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","push","oldArrayProtoMethods","Array","prototype","arrayMethods","create","methods","method","_len","arguments","args","_key","result","apply","inserted","ob","_ob_","slice","observeArray","dep","notify","id","Dep","_classCallCheck","subs","_createClass","depend","addDep","addSub","watcher","update","pushTarget","popTarget","Observe","isArray","__proto__","walk","item","keys","defineReactive","childDep","_typeof","Watcher","exprOrFn","undefined","user","isWatcher","deps","depsid","Set","getter","path","split","obj","i","has","add","run","oldValue","call","queueWatcher","queue","flushSchedulerQueue","initState","opt","$options","props","initData","computed","watch","initWatch","_data","_loop","handler","handle","createWatcher","$watch","stateMixin","Vue","$nextTick","_objectSpread","immediate","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHtml","html","creatASTElement","tagName","attrs","tag","type","children","root","currentParent","stack","start","element","end","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRe","genProps","str","foreach","_item$split","_item$split2","_slicedToArray","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","trim","join","genChildren","el","map","code","compileToFunctions","template","ast","render","Function","patch","oldVnode","vnode","createElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","createElement","updateProperties","appendChild","newProps","styleName","style","className","setAttribute","lifecycleMixin","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","outerHTML","renderMixin","_c","_s","val","_v","createTextVnode","initGlobalApi","mixin"],"mappings":"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"}