{"version":3,"file":"vue.js","sources":["../../src/util.js","../../src/observe/array.js","../../src/observe/dep.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/observe/watcher.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/global-api/index.js","../../src/index.js"],"sourcesContent":["export function proxy(vm,data,key){\n    Object.defineProperty(vm,key,{\n        get(){\n            return vm[data][key]\n        },\n        set(newValue){\n            vm[data][key] = newValue\n        }\n    }) \n}\nexport function defineProperty(target,key,value){\n    Object.defineProperty(target,key,{\n        enumerable:false, //不能被枚举\n        configurable:false,\n        value\n    })\n}\nexport const LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed '\n]\nconst strats = []\nstrats.data = function(parentVal,childValue){\n    return childValue\n}\nstrats.computed = function(){\n    \n}\nstrats.watch = function(){\n    \n}\nfunction mergeHook(parentVal,childValue){\n    if(childValue){\n        if(parentVal){\n            return parentVal.concat(childValue)//父亲和儿子拼接\n        }else{\n            return [childValue] //儿子转换为数组\n        }\n    }else{\n        return parentVal //不合并，用父亲的\n    }\n}\nLIFECYCLE_HOOKS.forEach(hook=>{\n    strats[hook] = mergeHook\n})   \n \nexport function mergeOptions(parent,child){\n    const options = {}\n    //遍历父亲\n    for(let key in parent){//父亲和儿子都有的在这处理\n        mergeField(key)\n    }\n    //儿子有父亲没有的在这处理\n    for(let key in child){//将儿子多的赋予到父亲上\n        if(!parent.hasOwnProperty(key)){\n            mergeField(key)\n        }\n\n    }\n    function mergeField(key){//合并字段\n        if(strats[key]){\n            options[key] = strats[key](parent[key],child[key])\n        }else{\n            options[key] = child[key]\n        }\n        \n    }\n    return options\n}","let oldArrayProtoMethods = Array.prototype\nexport let arrayMethods = Object.create(oldArrayProtoMethods)\nlet methods = ['push','pop','shift','shift','reverse','sort','splice']\nmethods.forEach(method => {\n    arrayMethods[method] = function(...arg){\n        const result = oldArrayProtoMethods[method].apply(this,arg)\n        let inserted;\n        let ob = this._ob_\n        switch(method){\n            case 'push':\n            case 'unshift'://两个都是增加，内容 可能是对象，需要劫持\n                inserted = arg\n                break;\n            case 'splice'://$set原理\n                inserted = arg.slice(2)\n            default:\n                break;\n        }\n        if(inserted){\n            ob.observeArray(inserted)\n        }\n        return result\n    }\n})","class Dep{\n    constructor(){\n        this.subs = []\n    }\n    depend(){\n        this.subs.push(Dep.target)\n    }\n    notify(){\n        this.subs.forEach(watcher=>watcher.update())\n    }\n}\nDep.target = null\nexport function pushTarget(watcher){\n    Dep.target = watcher\n}\nexport function popTarget(){\n    Dep.target = null\n}\nexport default Dep\n//多对多的关系，一个属性有一个dep来收集watcher\n//dep可以存多个watch\n//一个watch可以对应多个dep","import { defineProperty } from \"../util\"\nimport { arrayMethods } from \"./array\"\nimport Dep from \"./dep\"\nclass Observe{\n    constructor(value){\n        //判断一个属性是否是被观测过，看它有没有_ob_属性\n        defineProperty(value,'_ob_',this)\n        if(Array.isArray(value)){\n            value.__proto__ = arrayMethods\n            this.observeArray(value)//数组中普通类型是不做观测的\n        }else{\n            this.walk(value)\n        }\n        \n    }\n    observeArray(value){\n        value.forEach(item=>{\n            observe(item)\n        })\n    }\n    walk(data){\n        let keys = Object.keys(data)\n        keys.forEach(key=>{\n            defineReactive(data,key,data[key])\n        })\n    }\n}\nfunction defineReactive(data,key,value){\n    observe(value);//如果值为对象，继续监控\n    let dep = new Dep()\n    Object.defineProperty(data,key,{\n        get(){//依赖收集\n            if(Dep.target){//让这个属性记住这个watcher\n                dep.depend()\n            }\n            return value\n        },\n        set(newValue){//依赖更新\n            if(value === newValue) return\n            observe(newValue) //如果新值设置为对象，继续监控\n            value = newValue\n            dep.notify()\n        }\n    })\n}\nexport function observe(data){\n    if(typeof data !== \"object\" || data == null){\n        return data\n    }\n    if(data._ob_){\n        return data\n    }\n    return new Observe(data)\n}","import { observe } from \"./observe/index.js\"\nimport {proxy} from \"./util.js\"\n\nexport function initState(vm){\n    const opt = vm.$options\n    if(opt.props){\n        initProps(vm)\n    }\n    if(opt.data){\n        initData(vm)\n    }\n    if(opt.methods){\n        initMethods(vm)\n    }\n    if(opt.computed){\n        initComputed(vm)\n    }\n    if(opt.watch){\n        initWatch(vm)\n    }\n}\nfunction initProps(){\n    \n}\n\nfunction initData(vm){\n    let data = vm.$options.data\n    vm._data = data = typeof data == 'function'?data.call(vm):data\n    for(let key in data){\n        proxy(vm,'_data',key)\n    }\n    observe(data)//让对象重新定义set、get方法\n}\nfunction initMethods(){\n\n}\nfunction initComputed(){\n\n}\nfunction initWatch(){\n\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //标签开头的正则，捕获的是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //匹配标签结尾\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/ //匹配属性\nconst startTagClose = /^\\s*(\\/?)>/  //匹配标签结束\n\nexport function parseHtml(html){\n    function creatASTElement(tagName,attrs){\n        return {\n            tag:tagName,\n            type:1,\n            children:[],\n            attrs,\n            parent:null\n        }\n    }\n    //被解析的根元素\n    let root\n    //当前在被解析的元素\n    let currentParent\n    //用于对比标签是否符合规范，即有开始标签也有结束标签\n    let stack = []\n    function start(tagName,attrs){\n        let element = creatASTElement(tagName,attrs)\n        if(!root){\n            root = element\n        }\n        currentParent = element\n        stack.push(element)//将生成的ast元素放到栈中\n    }\n    function end(){\n        let element = stack.pop();//取出栈里最后一个，即该标签解析结束\n        currentParent = stack[stack.length-1] //更新当前解析的标签\n        if(currentParent){//当一个标签解析完成，就可以知道其父标签  \n            element.parent = currentParent\n            currentParent.children.push(element)\n        }\n    \n    }\n    function chars(text){\n        \n        text = text.replace(/\\s/g,'')//去掉空格\n        if(text){\n            currentParent.children.push({\n                 type:3,\n                 text\n            })\n        }\n        \n    }\n    while(html){\n        let textEnd = html.indexOf('<')\n        if(textEnd == 0){//是标签的开始标记\n            const startTagMatch = parseStartTag()\n            if(startTagMatch){ \n                start(startTagMatch.tagName,startTagMatch.attrs )\n                continue\n            }\n            const endTagMatch = html.match(endTag)\n            if(endTagMatch){\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1])\n                continue\n            }\n        }\n        let text\n        if(textEnd>0){//是文本\n            text = html.substring(0,textEnd)\n        }\n        if(text){\n            advance(text.length)\n            chars(text)\n        }\n    }\n    return root \n    function advance(n){//截取更新html\n        html = html.substring(n)\n    }\n    function parseStartTag(){\n        const start = html.match(startTagOpen)\n        if(start){\n            const match = {\n                tagName:start[1],\n                attrs:[]\n            }\n            advance(start[0].length)//删除开始标签\n            //不是标签结束标记且有属性\n            let end;\n            let attr;\n            while(!(end=html.match(startTagClose))&&(attr=html.match(attribute))){\n                match.attrs.push({name:attr[1],value:attr[3]||attr[4]||attr[5]})\n                advance(attr[0].length) \n            }\n            if(end){//匹配到标签结束标记，删除标签并结束一轮的开始标签信息解析\n                advance(end[0].length)\n                return match;\n                \n            }\n        }\n    }\n}","const defaultTagRe = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g //匹配双大括号和里面的内容\nfunction genProps(attrs){\n    let str = ''\n    for(let i = 0;i<attrs.length;i++){\n        let attr = attrs[i]\n        if(attr.name === 'style'){//对样式的特殊处理\n            let obj = {};\n            attr.value.split(';').foreach(item => {\n                let [key,value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\nfunction gen(node){\n    if(node.type == 1){\n        return generate(node)//生成元素节点的字符串\n    }else{\n        let text = node.text;//获取文本\n        //_v('hello{{world}}') => _v('hello'+_s(world))\n        if(!defaultTagRe.test(text)){\n            //如果是普通文本，不带{{}}\n            return `_v(${JSON.stringify(text)})`\n        }\n        let tokens = []\n        let lastIndex = defaultTagRe.lastIndex = 0 //如果正则是全局模式，需要每次使用前设置为0\n        let match,index\n        while(match = defaultTagRe.exec(text)){\n            index = match.index//保存匹配到的索引\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`)\n            lastIndex = index + match[0].length\n        }\n        if(lastIndex<text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\n        }\n        return `_v(${tokens.join('+')})`\n    }\n}\nfunction genChildren(el){\n    const children = el.children\n    if(children){ //将转换后的儿子用逗号拼接起来\n        return children.map(child => gen(child)).join(',')\n    }\n}\nexport function generate(el){\n    let children = genChildren(el)//儿子的生成 \n    let code = `_c('${el.tag}',${\n        el.attrs?`${genProps(el.attrs)}`:'undefined'\n    }${\n        children?`,${children}`:''\n    })`\n    return code\n}","import {parseHtml} from './parse.js'\nimport { generate } from './generate.js'\nexport function compileToFunctions(template){\n    //1.将html转化为ast语法树\n    let ast = parseHtml(template)\n\n    //2.优化静态节点\n\n    //3.通过这棵树重新生成代码\n    let code = generate(ast)\n\n    //4.将字符串变成函数 限制取值范围 通过with进行取值 之后通过render函数就可以改变this 让这个函数内部取到结果\n    let render = new Function(`with(this){return ${code}}`)\n    return render\n}","export function patch(oldVnode,vnode){\n    // console.log(oldVnode,vnode)\n    //虚拟dom转换为真实dom\n    let el = createElm(vnode)//产生真实dom\n    let parentElm = oldVnode.parentNode\n    parentElm.insertBefore(el,oldVnode.nextSibling)//将新的节点插在老的节点前面\n    parentElm.removeChild(oldVnode)//删除老的节点\n    return el\n}\nfunction createElm(vnode){\n    let {tag,children,key,data,text} = vnode\n    if(typeof tag == \"string\"){\n        vnode.el = document.createElement(tag)\n        updateProperties(vnode)\n        children.forEach(child=>{\n            vnode.el.appendChild(createElm(child))\n        })\n    }else{\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\nfunction updateProperties(vnode){\n    let el = vnode.el\n    let newProps = vnode.data\n    for(let key in newProps){\n        if(key == \"style\"){\n            for(let styleName in newProps.style){\n                el.style[styleName] = newProps.style[styleName]\n            }\n        }else if(key == \"class\"){\n            el.className = el.class\n        }else{\n            el.setAttribute(key,newProps[key]) \n        }\n        \n    }\n    \n}","import {pushTarget,popTarget} from './dep'\nlet id = 0\nclass Watcher{\n    constructor(vm,exprOrFn,cb,option){\n        this.vm = vm\n        this.exprOrFn = exprOrFn\n        this.cb = cb\n        this.option = option\n        this.id = id++ //watch的唯一标识\n        if(typeof exprOrFn == \"function\"){\n            this.getter = exprOrFn\n        }\n        this.get()\n    }\n    get(){\n        pushTarget(this)//当前watcher实例\n        this.getter()\n        popTarget()\n    }\n    update(){\n        this.get()//重新渲染\n    }\n}\nexport default Watcher","import {patch} from './vdom/patch'\nimport Watcher from './observe/watcher'\nexport function lifecycleMixin(Vue){\n    Vue.prototype._update = function(vnode){\n        const vm = this\n        //用新创建的元素，替换老的vm.$el\n        vm.$el = patch(vm.$el,vnode)\n    }\n}\nexport function mountComponent(vm,el){\n    callHook(vm,'beforeMount')\n    let updateComponent = () => {\n        vm._update(vm._render())\n    }\n    //初始化创建watcher\n    let watcher = new Watcher(vm,updateComponent,()=>{\n        callHook(vm,'beforeUpdate')\n    },true)\n    watcher.get()\n    callHook(vm,'mounted')\n}\nexport function callHook(vm,hook){\n    const handlers = vm.$options[hook]\n    if(handlers){\n        for(let i = 0;i<handlers.length;i++){\n            handlers[i].call(vm)\n        }\n    }\n}","import {initState} from './state'\nimport { compileToFunctions } from './compiler/index.js'\nimport {callHook, mountComponent} from './lifecycle'\nimport {mergeOptions} from './util'\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){\n        const vm = this\n        vm.$options = mergeOptions(vm.constructor.options,options)\n        callHook(vm,'beforeCreate')\n        //初始化状态（将数据做一个初始化劫持，当改变数据时更新视图）\n        initState(vm)\n        callHook(vm,'created')\n        if(vm.$options.el){\n            vm.$mount(vm.$options.el)\n        }\n    }\n    Vue.prototype.$mount = function(el){\n        //挂载操作\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        vm.$el = el\n        if(!options.render){\n            //没有render，把template转换成render方法\n            let template = options.template\n            if(!template && el){\n                template = el.outerHTML\n            }\n            //将模编译成render函数\n            const render = compileToFunctions(template)\n            options.render = render\n        }\n        mountComponent(vm,el)\n    }\n}","export function renderMixin(Vue){\n    Vue.prototype._c = function(){//创建虚拟dom元素\n        return createElement(...arguments)\n    }\n    Vue.prototype._s = function(val){//stringify\n        return val == null ? '' : (typeof val == 'object') ? JSON.stringify(val) : val\n    }\n    Vue.prototype._v = function(text){//创建虚拟dom文本元素\n        return createTextVnode(text)\n    }\n    \n    Vue.prototype._render = function(){//_render = render\n        const vm = this\n        const render = vm.$options.render\n        let vnode = render.call(vm)\n        return vnode \n    }\n}\nfunction createElement(tag,data={},...children){\n    return vnode(tag,data,data.key,children)\n}\nfunction createTextVnode(text){\n    return vnode(undefined,undefined,undefined,undefined,text)\n}\nfunction vnode(tag,data,key,children,text){\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}","import {mergeOptions} from '../util'\nexport function initGlobalApi(Vue){\n    Vue.options = {};\n    Vue.mixin = function(mixin){\n        this.options = mergeOptions(this.options,mixin)\n    }\n    \n} ","import { initMixin } from \"./init\";\nimport { lifecycleMixin } from \"./lifecycle\";\nimport { renderMixin } from \"./vdom/index\";\nimport {initGlobalApi} from \"./global-api/index\"\nexport default function Vue(options){\n    this._init(options)\n}\n//对原型进行拓展 原型方法\ninitMixin(Vue) //init方法\nlifecycleMixin(Vue) //_update\nrenderMixin(Vue) //_render\n\n//静态方法\ninitGlobalApi(Vue)"],"names":["proxy","vm","data","key","Object","defineProperty","get","set","newValue","target","value","enumerable","configurable","LIFECYCLE_HOOKS","strats","parentVal","childValue","computed","watch","mergeHook","concat","forEach","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","oldArrayProtoMethods","Array","prototype","arrayMethods","create","methods","method","_len","arguments","length","arg","_key","result","apply","inserted","ob","_ob_","slice","observeArray","Dep","_classCallCheck","subs","_createClass","depend","push","notify","watcher","update","pushTarget","popTarget","Observe","isArray","__proto__","walk","item","observe","keys","defineReactive","dep","_typeof","initState","opt","$options","props","initData","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHtml","html","creatASTElement","tagName","attrs","tag","type","children","root","currentParent","stack","start","element","end","pop","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRe","genProps","str","_loop","i","obj","split","foreach","_item$split","_item$split2","_slicedToArray","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","trim","join","genChildren","el","map","code","compileToFunctions","template","ast","render","Function","patch","oldVnode","vnode","createElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","id","Watcher","exprOrFn","cb","option","getter","lifecycleMixin","Vue","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","outerHTML","renderMixin","_c","_s","val","_v","createTextVnode","undefined","initGlobalApi","mixin"],"mappings":"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"}