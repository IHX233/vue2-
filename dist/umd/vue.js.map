{"version":3,"file":"vue.js","sources":["../../src/observe/dep.js","../../src/util.js","../../src/observe/array.js","../../src/observe/index.js","../../src/observe/watcher.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/global-api/index.js","../../src/index.js"],"sourcesContent":["let id = 0\nclass Dep{\n    constructor(){\n        this.subs = []\n        this.id = id++\n    }\n    depend(){\n        //dep存放watch，watch也存放dep\n        Dep.target.addDep(this)\n    }\n    addSub(watcher){\n        this.subs.push(watcher)\n    }\n    notify(){\n        this.subs.forEach(watcher=>watcher.update())\n    }\n}\nDep.target = null\nlet stack = []\nexport function pushTarget(watcher){\n    Dep.target = watcher\n    stack.push(watcher)\n}\nexport function popTarget(){\n    stack.pop()\n    Dep.target = stack[stack.length - 1]\n}\nexport default Dep\n//多对多的关系，一个属性有一个dep来收集watcher\n//dep可以存多个watch\n//一个watch可以对应多个dep","export function proxy(vm,data,key){\n    Object.defineProperty(vm,key,{\n        get(){\n            return vm[data][key]\n        },\n        set(newValue){\n            vm[data][key] = newValue\n        }\n    }) \n}\nexport function defineProperty(target,key,value){\n    Object.defineProperty(target,key,{\n        enumerable:false, //不能被枚举\n        configurable:false,\n        value\n    })\n}\nexport const LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed '\n]\nconst strats = []\nstrats.data = function(parentVal,childValue){\n    return childValue\n}\n// strats.computed = function(){\n    \n// }\n// strats.watch = function(){\n    \n// }\nfunction mergeHook(parentVal,childValue){\n    if(childValue){\n        if(parentVal){\n            return parentVal.concat(childValue)//父亲和儿子拼接\n        }else{\n            return [childValue] //儿子转换为数组\n        }\n    }else{\n        return parentVal //不合并，用父亲的\n    }\n}\nLIFECYCLE_HOOKS.forEach(hook=>{\n    strats[hook] = mergeHook\n})   \n \nexport function mergeOptions(parent,child){\n    const options = {}\n    //遍历父亲\n    for(let key in parent){//父亲和儿子都有的在这处理\n        mergeField(key)\n    }\n    //儿子有父亲没有的在这处理\n    for(let key in child){//将儿子多的赋予到父亲上\n        if(!parent.hasOwnProperty(key)){\n            mergeField(key)\n        }\n\n    }\n    function mergeField(key){//合并字段\n        if(strats[key]){\n            options[key] = strats[key](parent[key],child[key])\n        }else{\n            options[key] = child[key]\n        }\n        \n    }\n    return options\n}\nlet callbacks = []\nlet pending = false\nfunction flushCallbacks(){\n    while(callbacks.length){\n        let cb = callbacks.pop()\n        cb()\n    }\n    // callbacks.forEach(cb=>cb())\n    // callbacks = []\n    pending = false\n}\nlet timerFunc\n//兼容处理\nif(Promise){\n    timerFunc = () => {\n        Promise.resolve().then(flushCallbacks)\n    }\n}else if(MutationObserver){//可以监控dom变化，监控完毕异步更新\n    let observe = new MutationObserver(flushCallbacks)\n    let textNode = document.createTextNode(1)\n    observe.observe(textNode,{characterData:true})\n    timerFunc = ()=>{\n        textNode.textContent = 2\n    }\n}else if(setImmediate){\n    timerFunc = ()=>{\n        setImmediate(flushCallbacks)\n    }\n}else{\n    timerFunc = ()=>{\n        setTimeout(flushCallbacks)\n    }\n}\nexport function nextTick(cb){\n    callbacks.push(cb)\n    if(!pending){ \n        timerFunc()//这个是异步方法，做了兼容处理\n        pending = true\n    }\n    \n}","let oldArrayProtoMethods = Array.prototype\nexport let arrayMethods = Object.create(oldArrayProtoMethods)\nlet methods = ['push','pop','shift','unshift','reverse','sort','splice']\nmethods.forEach(method => {\n    arrayMethods[method] = function(...args){\n        //当调用数组劫持的七个方法时触发更新\n        const result = oldArrayProtoMethods[method].apply(this,args)\n        let inserted;\n        let ob = this._ob_\n        switch(method){\n            case 'push':\n            case 'unshift'://两个都是增加，内容 可能是对象，需要劫持\n                inserted = args\n                break;\n            case 'splice'://$set原理\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n        if(inserted){\n            ob.observeArray(inserted)\n        }\n        ob.dep.notify()//通知数组更新\n        return result\n    }\n})","import { defineProperty } from \"../util\"\nimport { arrayMethods } from \"./array\"\nimport Dep from \"./dep\"\nclass Observe{\n    constructor(value){\n        this.dep = new Dep()//为了把dep放ob属性上，这样数组方法触发时才能用到dep的更新方法\n        //判断一个属性是否是被观测过，看它有没有_ob_属性\n        defineProperty(value,'_ob_',this)\n        if(Array.isArray(value)){\n            value.__proto__ = arrayMethods\n            this.observeArray(value)//数组中普通类型是不做观测的\n        }else{\n            this.walk(value)\n        }\n        \n    }\n    observeArray(value){\n        value.forEach(item=>{\n            observe(item)\n        })\n    }\n    walk(data){\n        let keys = Object.keys(data)\n        keys.forEach(key=>{\n            defineReactive(data,key,data[key])\n        })\n    }\n}\nfunction defineReactive(data,key,value){\n    //获取数组对应的dep\n    let childDep = observe(value);//如果值为对象，继续监控\n    let dep = new Dep()\n    Object.defineProperty(data,key,{\n        get(){//依赖收集\n            if(Dep.target){//让这个属性记住这个watcher\n                dep.depend()\n                if(typeof childDep == \"object\"){//可能是数组，也可能是对象\n                    childDep.dep.depend()//这样才能收集数组的watch并在调用数组方法时触发更新\n                }\n            }\n            return value\n        },\n        set(newValue){//依赖更新\n            if(value === newValue) return\n            observe(newValue) //如果新值设置为对象，继续监控\n            value = newValue\n            dep.notify()\n        }\n    })\n}\nexport function observe(data){\n    if(typeof data !== \"object\" || data == null){\n        return\n    }\n    if(data._ob_){\n        return data\n    }\n    return new Observe(data)\n}","import {pushTarget,popTarget} from './dep'\nimport {nextTick} from \"../util\"\nimport { watch } from 'rollup'\nlet id = 0\nclass Watcher{\n    constructor(vm,exprOrFn,cb,options={}){\n        this.vm = vm\n        this.exprOrFn = exprOrFn\n        this.cb = cb\n        this.options = options\n        this.user = options.user//用户watcher标识\n        this.isWatcher = typeof options === \"boolean\"//是渲染watch\n        this.lazy = options.lazy //如果watcher上有lazy属性，就是一个计算属性\n        this.dirty = this.lazy //ditty代表取值时是否执行用户的方法\n        this.id = id++ //watcher的唯一标识\n        this.deps = [] //watcher记录有多少dep依赖它\n        this.depsid = new Set()\n        if(typeof exprOrFn == \"function\"){\n            this.getter = exprOrFn\n        }else{\n            this.getter = function(){\n                let path = exprOrFn.split('.')\n                let obj = vm\n                for(let i=0;i<path.length;i++){\n                    obj = obj[path[i]]\n                }\n                return obj \n            }\n        }\n        this.value = this.lazy? 0 :this.get()\n    }\n    addDep(dep){\n        let id = dep.id\n        if(!this.depsid.has(id)){\n            this.deps.push(dep)\n            this.depsid.add(id)\n            dep.addSub(this)\n        }\n    }\n    get(){\n        //组件挂载的时候会调用一次get，此时getter是渲染页面，会触发definedProperty的get方法收集watcher依赖，所以要在这之前pushTarget然后再popTarget\n        pushTarget(this)//当前watcher实例\n        let result = this.getter.call(this.vm)\n        popTarget()\n        return result\n    }\n    run(){\n        //用户watcher时取新老值\n        let newValue = this.get()\n        let oldValue = this.value\n        this.value = newValue\n        if(this.user){\n            this.cb.call(this.vm,newValue,oldValue)\n        }\n    }\n    update(){\n        // this.get()//重新渲染\n        if(this.lazy){//计算属性watcher不用更新页面\n            this.dirty = true //页面重新渲染就能获取最新的值 \n        }else{\n            queueWatcher(this)\n        }\n        \n    }\n    evaluate(){\n        this.value = this.get()\n        this.dirty = false \n    }\n    depend(){\n        let i = this.deps.length\n        while(i--){\n            this.deps[i].depend()\n        }\n    }\n}\nlet queue = []//将需要批处理更新的watcher存到一个队列中，稍后让watcher执行\nlet has = {}\nlet pending = false\nfunction flushSchedulerQueue(){\n    queue.forEach(watcher => {watcher.run();\n        if(watcher.isWatcher){\n            watcher.cb()\n        }\n        \n    })\n    queue = []\n    has = {}\n    pending = false\n}\nfunction queueWatcher(watcher){\n    const id = watcher.id\n    if(has[id] == null){\n        queue.push(watcher)\n        has[id] = true\n        if(!pending){\n            nextTick(flushSchedulerQueue)\n            pending = true\n        }\n    }\n}\nexport default Watcher","import Dep from \"./observe/dep.js\"\nimport { observe } from \"./observe/index.js\"\nimport Watcher from \"./observe/watcher.js\"\nimport {proxy,nextTick} from \"./util.js\"\n\nexport function initState(vm){\n    const opt = vm.$options\n    if(opt.props){\n        initProps(vm)\n    }\n    if(opt.data){\n        initData(vm)\n    }\n    if(opt.methods){\n        initMethods(vm)\n    }\n    if(opt.computed){\n        initComputed(vm)\n    }\n    if(opt.watch){\n        initWatch(vm)\n    }\n}\nfunction initProps(){\n    \n}\n\nfunction initData(vm){\n    let data = vm.$options.data\n    vm._data = data = typeof data == 'function'?data.call(vm):data\n    for(let key in data){\n        proxy(vm,'_data',key)\n    }\n    observe(data)//让对象重新定义set、get方法\n}\nfunction initMethods(){\n\n}\nfunction initComputed(vm){\n    //需要有watcher 还需要通过defineProperty dirty\n    let computed = vm.$options.computed\n    let watchers = vm._computedWatchers = {}\n    for(let key in computed){\n        const userDef = computed[key]\n        const getter = typeof userDef == \"function\"?userDef:userDef.get\n        watchers[key] = new Watcher(vm,getter,()=>{},{lazy:true})\n        defineComputed(vm,key,userDef)\n\n    }\n}\n\nfunction defineComputed(target,key,userDef){\n    let sharedPropertyDefiniton = {\n        enumerable:true,\n        configurable:true,\n        get:()=>{},\n        set:()=>{}\n    }\n    if(typeof userDef == \"function\"){\n        sharedPropertyDefiniton.get = createComputedGetter(key)\n    }else{\n        sharedPropertyDefiniton.get = createComputedGetter(key)\n        sharedPropertyDefiniton.set = userDef.set \n    }\n    Object.defineProperty(target,key,sharedPropertyDefiniton)\n}\nfunction createComputedGetter(key){\n    return function(){\n        const watcher = this._computedWatchers[key]\n        if(watcher){\n            if(watcher.dirty){\n                watcher.evaluate()\n            }\n            if(Dep.target){//说明还有渲染watcher，应该一起收集起来\n                watcher.depend()//计算属性watcher\n            }\n\n            return watcher.value\n        }\n        \n    }\n}\nfunction initWatch(vm){\n    let watch = vm.$options.watch\n    for(let key in watch){\n        const handler = watch[key]\n        if(Array.isArray(handler)){//数组\n            handler.forEach(handle=>{\n                createWatcher(vm,key,handle)\n            })\n        }else{//字符串、对象、函数\n            createWatcher(vm,key,handler)\n        }\n    }\n    \n}\nfunction createWatcher(vm,exprOrFn,handler,options={}){//options可以用来标识是用户watcher\n    if(typeof handler == \"object\"){\n        options = handler\n        handler = handler.handler\n    }\n    if(typeof handler == \"string\"){\n        handler = vm[handler]\n    }\n    return vm.$watch(exprOrFn,handler,options)\n}\nexport function stateMixin(Vue){\n    Vue.prototype.$nextTick = function(cb){\n        nextTick(cb)\n    }\n    Vue.prototype.$watch = function(exprOrFn,cb,options){\n        let watcher =  new Watcher(this,exprOrFn,cb,{...options,user:true})\n        if(options.immediate){\n            cb()\n        }\n    }\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //标签开头的正则，捕获的是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //匹配标签结尾\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/ //匹配属性\nconst startTagClose = /^\\s*(\\/?)>/  //匹配标签结束\n\nexport function parseHtml(html){\n    function creatASTElement(tagName,attrs){\n        return {\n            tag:tagName,\n            type:1,\n            children:[],\n            attrs,\n            parent:null\n        }\n    }\n    //被解析的根元素\n    let root\n    //当前在被解析的元素\n    let currentParent\n    //用于对比标签是否符合规范，即有开始标签也有结束标签\n    let stack = []\n    function start(tagName,attrs){\n        let element = creatASTElement(tagName,attrs)\n        if(!root){\n            root = element\n        }\n        currentParent = element\n        stack.push(element)//将生成的ast元素放到栈中\n    }\n    function end(){\n        let element = stack.pop();//取出栈里最后一个，即该标签解析结束\n        currentParent = stack[stack.length-1] //更新当前解析的标签\n        if(currentParent){//当一个标签解析完成，就可以知道其父标签  \n            element.parent = currentParent\n            currentParent.children.push(element)\n        }\n    \n    }\n    function chars(text){\n        \n        text = text.replace(/\\s/g,'')//去掉空格\n        if(text){\n            currentParent.children.push({\n                 type:3,\n                 text\n            })\n        }\n        \n    }\n    while(html){\n        let textEnd = html.indexOf('<')\n        if(textEnd == 0){//是标签的开始标记\n            const startTagMatch = parseStartTag()\n            if(startTagMatch){ \n                start(startTagMatch.tagName,startTagMatch.attrs )\n                continue\n            }\n            const endTagMatch = html.match(endTag)\n            if(endTagMatch){\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1])\n                continue\n            }\n        }\n        let text\n        if(textEnd>0){//是文本\n            text = html.substring(0,textEnd)\n        }\n        if(text){\n            advance(text.length)\n            chars(text)\n        }\n    }\n    return root \n    function advance(n){//截取更新html\n        html = html.substring(n)\n    }\n    //创建当前被解析html标签的ast语法结构\n    function parseStartTag(){\n        const start = html.match(startTagOpen)\n        if(start){\n            const match = {\n                tagName:start[1],\n                attrs:[]\n            }\n            advance(start[0].length)//删除开始标签\n            //不是标签结束标记且有属性\n            let end;\n            let attr;\n            while(!(end=html.match(startTagClose))&&(attr=html.match(attribute))){\n                match.attrs.push({name:attr[1],value:attr[3]||attr[4]||attr[5]})\n                advance(attr[0].length) \n            }\n            if(end){//匹配到标签结束标记，删除标签并结束一轮的开始标签信息解析\n                advance(end[0].length)\n                return match;\n                \n            }\n        }\n    }\n}","const defaultTagRe = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g //匹配双大括号和里面的内容\nfunction genProps(attrs){\n    let str = ''\n    for(let i = 0;i<attrs.length;i++){\n        let attr = attrs[i]\n        if(attr.name === 'style'){//对样式的特殊处理\n            let obj = {};\n            attr.value.split(';').forEach(item => {\n                let [key,value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\nfunction gen(node){\n    if(node.type == 1){\n        return generate(node)//生成元素节点的字符串\n    }else{\n        let text = node.text;//获取文本\n        //_v('hello{{world}}') => _v('hello'+_s(world))\n        if(!defaultTagRe.test(text)){\n            //如果是普通文本，不带{{}}\n            return `_v(${JSON.stringify(text)})`\n        }\n        let tokens = []\n        let lastIndex = defaultTagRe.lastIndex = 0 //如果正则是全局模式，需要每次使用前设置为0\n        let match,index\n        while(match = defaultTagRe.exec(text)){\n            index = match.index//保存匹配到的索引\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`)\n            lastIndex = index + match[0].length\n        }\n        if(lastIndex<text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\n        }\n        return `_v(${tokens.join('+')})`\n    }\n}\nfunction genChildren(el){\n    const children = el.children\n    if(children){ //将转换后的儿子用逗号拼接起来\n        return children.map(child => gen(child)).join(',')\n    }\n}\nexport function generate(el){\n    let children = genChildren(el)//儿子的生成 \n    let code = `_c('${el.tag}',${\n        el.attrs?`${genProps(el.attrs)}`:'undefined'\n    }${\n        children?`,${children}`:''\n    })`\n    return code\n}","import {parseHtml} from './parse.js'\nimport { generate } from './generate.js'\nexport function compileToFunctions(template){\n    //1.将html转化为ast语法树\n    let ast = parseHtml(template)\n    //2.优化静态节点\n\n    //3.通过这棵树重新生成代码\n    let code = generate(ast)\n    //4.将字符串变成函数 限制取值范围 通过with进行取值 之后通过render函数就可以改变this 让这个函数内部取到结果\n    let render = new Function(`with(this){return ${code}}`)\n    return render\n}","export function patch(oldVnode,vnode){\n    if(oldVnode.nodeType == 1){//真实节点\n        //虚拟dom转换为真实dom\n        let el = createElm(vnode)//产生真实dom\n        let parentElm = oldVnode.parentNode\n        parentElm.insertBefore(el,oldVnode.nextSibling)//将新的节点插在老的节点前面\n        parentElm.removeChild(oldVnode)//删除老的节点\n        return el\n    }else{\n        //在更新的时候拿老的虚拟节点和新的虚拟节点做对比，将不同的地方更新\n        //1.比较两个元素的标签，标签不一样直接替换掉\n        if(oldVnode.tag !== vnode.tag){\n            return oldVnode.el.parentNode.replaceChild(createElm(vnode),oldVnode.el)\n        }\n        //2.标签一样，比对文本，文本节点的tag都是undefined\n        if(!oldVnode.tag){\n            if(oldVnode.text!==vnode.text){\n                // oldVnode.el.data = vnode.text\n                // oldVnode.el.nodeValue = vnode.text\n                // oldVnode.el.textContent = vnode.text\n                return oldVnode.el.textContent = vnode.text\n            }\n        }\n        //3.标签一样，并且需要开始比对标签的属性和儿子\n        //标签一样直接复用即可\n        let el = vnode.el = oldVnode.el\n        //更新属性，用新的虚拟节点的属性和老的比较，去更新节点\n        //新老属性对比\n        updateProperties(vnode,oldVnode.data)\n        let oldChildren = oldVnode.children || []\n        let newChildren = vnode.children || []\n        if(oldChildren.length>0&&newChildren.length>0){//新老都有孩子\n            updateChildren(oldChildren,newChildren,el)\n        }else if(oldChildren.length>0){//新的没有\n            el.innerHTML = ''\n        }else if(newChildren.length>0){//老的没有\n            for(let i=0;i<newChildren.length;i++){\n                let child = newChildren[i]\n                el.appendChild(createElm(child))\n            }\n            \n        }\n    }\n    \n}\nfunction isSameVnode(oldVnode,newVnode){\n    return (oldVnode.tag == newVnode.tag)&&(oldVnode.key == newVnode.key)\n}\nfunction makeInedexByKey(children){\n    let map = {}\n    children.forEach((item,index)=>{\n        if(item.key){ \n            map[item.key] = index\n        }\n    })\n    return map\n}\nfunction updateChildren(oldChildren,newChildren,parent){\n    let oldStartIndex = 0\n    let oldStartVnode = oldChildren[0]\n    let oldEndIndex = oldChildren.length - 1\n    let oldEndVnode = oldChildren[oldEndIndex]\n\n    let newStartIndex = 0\n    let newStartVnode = newChildren[0]\n    let newEndIndex = newChildren.length - 1\n    let newEndVnode = newChildren[newEndIndex]\n    let map = makeInedexByKey(oldChildren)\n    //做一个循环，同时循环老的和新的，哪个先结束，循环就停止，将多余的删除或添加进去\n    while(oldStartIndex<=oldEndIndex&&newStartIndex<=newEndIndex){\n        if(!oldStartVnode){//null\n            oldStartVnode = oldChildren[++oldStartIndex]\n        }\n        //头头比\n        else if(isSameVnode(oldStartVnode,newStartVnode)){//如果是同一个元素，比对儿子\n            patch(oldStartVnode,newStartVnode)//更新属性，递归更新儿子\n            oldStartVnode = oldChildren[++oldStartIndex]\n            newStartVnode = newChildren[++newStartIndex]\n            //尾尾比\n        }else if(isSameVnode(oldEndVnode,newEndVnode)){\n            patch(oldEndVnode,newEndVnode)\n            oldEndVnode = oldChildren[--oldEndIndex]\n            newEndVnode = newChildren[--newEndIndex]\n            //头尾比\n        }else if(isSameVnode(oldStartVnode,newEndVnode)){\n            patch(oldStartVnode,newEndVnode)\n            //将当前元素插到尾部的下一个元素前面\n            parent.insertBefore(oldStartVnode.el,oldEndVnode.el.nextSibling)\n            oldStartVnode = oldChildren[++oldStartIndex]\n            newEndVnode = newChildren[--newEndIndex]\n        }else if(isSameVnode(oldEndVnode,newStartVnode)){\n            patch(oldEndVnode,newStartVnode)\n            parent.insertBefore(oldEndVnode.el,oldStartVnode.el)\n            oldEndVnode = oldChildren[--oldEndIndex]\n            newStartVnode = newChildren[++newStartIndex]\n        }else{\n            //暴力对比\n            let moveIndex = map[newStartVnode.key]\n            if(moveIndex == undefined){\n                parent.insertBefore(createElm(newStartVnode),oldStartVnode.el)\n            }else{\n                let moveVNode = oldChildren[moveIndex]\n                oldChildren[moveIndex] = null\n                parent.insertBefore(moveVNode.el,oldStartVnode.el)\n                patch(moveVNode,newStartVnode)\n            }\n            newStartVnode = newChildren[++newStartIndex]\n            \n        }\n    }\n    if(newStartIndex<=newEndIndex){\n        for(let i = newStartIndex;i<=newEndIndex;i++){\n            //将新的多的插入\n            parent.appendChild(createElm(newChildren[i]))\n        }\n    }\n    if(oldStartIndex <= oldEndIndex){\n        for(let i =oldStartIndex;i<=oldEndIndex;i++){\n            let child = oldChildren[i]\n            if(child!=undefined){\n                parent.removeChild(child.el)\n            }\n        }\n    }\n}\nexport function createElm(vnode){\n    let {tag,children,key,data,text} = vnode\n    if(typeof tag == \"string\"){\n        vnode.el = document.createElement(tag)\n        updateProperties(vnode)\n        children.forEach(child=>{\n            vnode.el.appendChild(createElm(child))\n        })\n    }else{\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\nfunction updateProperties(vnode,oldProps={}){\n    let newProps = vnode.data || {}\n    let el = vnode.el\n    //老的有新的没有需要删除属性\n    for(let key in oldProps){\n        if(!newProps[key]){\n            el.removeAttribute(key)\n        }\n    }\n\n    //样式处理  老的：style={color:red}   新的：style={background:red}\n    let newStyle = newProps.style || {}\n    let oldStyle = oldProps.style || {}\n    for(let key in oldStyle){\n        if(!newStyle[key]){\n            el.style[key] = \"\"\n        }\n    }\n\n    //新的有，直接用新的更新就行\n    for(let key in newProps){\n        if(key == \"style\"){\n            for(let styleName in newProps.style){\n                el.style[styleName] = newProps.style[styleName]\n            }\n        }else if(key == \"class\"){\n            el.className = newProps.class\n        }else{\n            el.setAttribute(key,newProps[key]) \n        }\n        \n    }\n    \n}","import {patch} from './vdom/patch'\nimport Watcher from './observe/watcher'\nexport function lifecycleMixin(Vue){\n    Vue.prototype._update = function(vnode){\n        const vm = this\n        const prevVnode = vm._vnode\n        //是否是首次渲染\n        if(!prevVnode){\n            //用新创建的元素，替换老的vm.$el\n            vm.$el = patch(vm.$el,vnode)\n            vm._vnode = vnode\n        }else{\n            vm.$el = patch(prevVnode,vnode)\n        }\n        \n    }\n}\nexport function mountComponent(vm,el){\n    callHook(vm,'beforeMount')\n    let updateComponent = () => {\n        vm._update(vm._render())\n    }\n    //初始化创建watcher\n    let watcher = new Watcher(vm,updateComponent,()=>{\n        callHook(vm,'updated')\n    },true)\n    // watcher.get()\n    callHook(vm,'mounted')\n}\nexport function callHook(vm,hook){\n    const handlers = vm.$options[hook]\n    if(handlers){\n        for(let i = 0;i<handlers.length;i++){\n            handlers[i].call(vm)\n        }\n    }\n}","import {initState} from './state'\nimport { compileToFunctions } from './compiler/index.js'\nimport {callHook, mountComponent} from './lifecycle'\nimport {mergeOptions} from './util'\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){\n        const vm = this\n        vm.$options = mergeOptions(vm.constructor.options,options)\n        callHook(vm,'beforeCreate')\n        //初始化状态（将数据做一个初始化劫持，当改变数据时更新视图）\n        initState(vm)\n        callHook(vm,'created')\n        if(vm.$options.el){\n            vm.$mount(vm.$options.el)\n        }\n    }\n    Vue.prototype.$mount = function(el){\n        //挂载操作\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        vm.$el = el\n        if(!options.render){\n            //没有render，把template转换成render方法\n            let template = options.template\n            if(!template && el){\n                template = el.outerHTML\n            }\n            //将模编译成render函数\n            const render = compileToFunctions(template)\n            options.render = render\n        }\n        mountComponent(vm,el)\n    }\n}","export function renderMixin(Vue){\n    Vue.prototype._c = function(){//创建虚拟dom元素\n        return createElement(...arguments)\n    }\n    Vue.prototype._s = function(val){//stringify\n        return val == null ? '' : (typeof val == 'object') ? JSON.stringify(val) : val\n    }\n    Vue.prototype._v = function(text){//创建虚拟dom文本元素\n        return createTextVnode(text)\n    }\n    \n    Vue.prototype._render = function(){//_render = render\n        const vm = this\n        const render = vm.$options.render\n        let vnode = render.call(vm)\n        return vnode \n    }\n}\nfunction createElement(tag,data={},...children){\n    return vnode(tag,data,data.key,children)\n}\nfunction createTextVnode(text){\n    return vnode(undefined,undefined,undefined,undefined,text)\n}\nfunction vnode(tag,data,key,children,text){\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}","import {mergeOptions} from '../util'\nexport function initGlobalApi(Vue){\n    Vue.options = {};\n    Vue.mixin = function(mixin){\n        this.options = mergeOptions(this.options,mixin)\n    }\n    \n} ","import { initMixin } from \"./init\";\nimport { lifecycleMixin } from \"./lifecycle\";\nimport { renderMixin } from \"./vdom/index\";\nimport {initGlobalApi} from \"./global-api/index\"\nimport {stateMixin} from \"./state\"\nexport default function Vue(options){\n    this._init(options)\n}\n//对原型进行拓展 原型方法\ninitMixin(Vue) //init方法\nlifecycleMixin(Vue) //_update\nrenderMixin(Vue) //_render\nstateMixin(Vue)\n\n//静态方法\ninitGlobalApi(Vue)\n\n// import { compileToFunctions } from \"./compiler/index\";\n// import {createElm, patch} from \"./vdom/patch\"\n// let vm1 = new Vue({data:{name:'ihx'}})\n// let render1 = compileToFunctions(`<div>\n//     <li style=\"background:red\">A</li>\n//     <li style=\"background:pink\">B</li>\n//     <li style=\"background:yellow\">C</li>\n//     <li style=\"background:green\">D</li>\n// </div>`)\n// let vnode1 = render1.call(vm1)\n// document.body.appendChild(createElm(vnode1))\n// let vm2 = new Vue({data:{name:'gf'}})\n// let render2 = compileToFunctions(`<div>\n// <li style=\"background:purple\">A</li>\n// <li style=\"background:pink\">B</li>\n// <li style=\"background:yellow\">C</li>\n// <li style=\"background:green\">D</li>\n// <li style=\"background:blue\">E</li>\n// </div>`)\n// let vnode2 = render2.call(vm2)\n// setTimeout(()=>{\n//     patch(vnode1,vnode2)\n// },1000)\n"],"names":["id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSub","watcher","push","notify","forEach","update","stack","pushTarget","popTarget","pop","length","proxy","vm","data","Object","defineProperty","get","set","newValue","enumerable","configurable","LIFECYCLE_HOOKS","strats","parentVal","childValue","mergeHook","concat","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","callbacks","pending","flushCallbacks","cb","timerFunc","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","oldArrayProtoMethods","Array","prototype","arrayMethods","create","methods","method","_len","arguments","args","_key","result","apply","inserted","ob","_ob_","slice","observeArray","dep","Observe","isArray","__proto__","walk","item","keys","defineReactive","childDep","_typeof","Watcher","exprOrFn","undefined","user","isWatcher","lazy","dirty","deps","depsid","Set","getter","path","split","obj","i","has","add","call","run","oldValue","queueWatcher","evaluate","queue","flushSchedulerQueue","initState","opt","$options","props","initData","computed","initComputed","watch","initWatch","_data","watchers","_computedWatchers","userDef","defineComputed","sharedPropertyDefiniton","createComputedGetter","_loop","handler","handle","createWatcher","$watch","stateMixin","Vue","$nextTick","_objectSpread","immediate","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHtml","html","creatASTElement","tagName","attrs","tag","type","children","root","currentParent","start","element","end","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRe","genProps","str","_item$split","_item$split2","_slicedToArray","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","trim","join","genChildren","el","map","code","compileToFunctions","template","ast","render","Function","patch","oldVnode","vnode","nodeType","createElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","updateProperties","oldChildren","newChildren","updateChildren","innerHTML","appendChild","isSameVnode","newVnode","makeInedexByKey","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","moveIndex","moveVNode","createElement","oldProps","newProps","removeAttribute","newStyle","style","oldStyle","styleName","className","setAttribute","lifecycleMixin","_update","prevVnode","_vnode","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","outerHTML","renderMixin","_c","_s","val","_v","createTextVnode","initGlobalApi","mixin"],"mappings":"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"}